@page "/filesmembers"

@using GazoFicationAndWaterWeb.Data

@inject IWebHostEnvironment Environment
@inject MemberService custSer

<div>
    <InputFile OnChange="AddFiles" multiple></InputFile>
</div>

<table class="table">
  <thead class="thead-light">
    <tr>
      <th scope="col">Name File</th>
      <th scope="col">IsTrue</th>
      <th scope="col">Send</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var item in browserFile)
    {
        <tr>
          <th scope="row">@item.Name</th>
          <td>
                <div class="form-check">
                    <input class="form-check-input" name="check" @bind-value="cek" type="checkbox" id="flexCheckDefault">
                </div>
          </td>
            <td>
                <div class="form-check">
                  <button class="btn btn-primary" @onclick="() => Sumbt()">Отправить</button>
                </div>
          </td>
        </tr>
    }
  </tbody>
</table>


@code {
    // Переменные

    private List<IBrowserFile>? browserFile = new List<IBrowserFile>();

    private Members? members;

    Documents document = new Documents();

    private string path = string.Empty;

    private bool cek = false;

    // Методы 

    protected override async Task OnInitializedAsync()
    {
        members = custSer.Get();
    }

    private void AddFiles(InputFileChangeEventArgs e)
    {
        if (e.FileCount == 11 && members.GetType().Name == "Developer" || e.FileCount == 9)
        {
            foreach (var items in e.GetMultipleFiles(e.FileCount))
            {
                browserFile.Add(items);
                path = Path.Combine(Environment.ContentRootPath, "wwwroot", "filesDeveloper", items.Name);

                using FileStream fs = new(path, FileMode.Create);
                items.OpenReadStream(10000000000000).CopyToAsync(fs);
            }
        }

        else if (e.FileCount == 2 && members.GetType().Name == "Designer" || e.FileCount == 3)
        {
            foreach (var items in e.GetMultipleFiles(e.FileCount))
            {
                browserFile.Add(items);
                path = Path.Combine(Environment.ContentRootPath, "wwwroot", "filesDesigner", items.Name);

                using FileStream fs = new(path, FileMode.Create);
                items.OpenReadStream(10000000000000).CopyToAsync(fs);
            }
        }
    }

    private void Sumbt()
    {

        Projects projects = new Projects();
        if (members.GetType().Name == "Developer")
        {
            foreach(var item in browserFile)
            {
                document = new Documents()
                {
                    Login = members.Login,
                    FileName = item.Name,
                    isTrue = cek
                };
            }
            MongoDataBase.AddDbDocuments(document);
        }

        else if (members.GetType().Name == "Designer")
        {
            foreach(var item in browserFile)
            {
                document = new Documents()
                {
                    Login = members.Login,
                    FileName = item.Name,
                    isTrue = cek
                };
            }
            MongoDataBase.AddDbDocuments(document);

        }
    }
}
